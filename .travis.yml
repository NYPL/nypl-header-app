language: node_js
node_js:
  - 18.15.0

services:
  - docker

branches:
  only:
    - qa
    - production

jobs:
  include:
    - stage: docker build
      if: (branch = qa or branch = production)
      before_install:
        - if [[ $TRAVIS_BRANCH == "qa" ]];
          then
          export AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID_QA};
          export AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY_QA};
          export ENV="qa";
          fi
        - if [[ "$TRAVIS_BRANCH" == "production" ]];
          then
          export AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID_PRODUCTION};
          export AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY_PRODUCTION};
          export ENV="production";
          fi
      env:
        - ECR_URL= # todo add url
        - AWS_DEFAULT_REGION=us-east-1
        - AWS_REGION=us-east-1
      install:
        - pip install --user awscli
        - export LOCAL_TAG_NAME="${ENV}-latest"
      script:
        - eval $(aws ecr get-login --no-include-email --region us-east-1)
        - DOCKER_BUILDKIT=1 docker build -t "$LOCAL_TAG_NAME" --secret id=AWS_ACCESS_KEY_ID --secret id=AWS_SECRET_ACCESS_KEY" .
        - docker tag "$LOCAL_TAG_NAME" "$ECR_URL:$LOCAL_TAG_NAME"
        - docker push "$ECR_URL:$LOCAL_TAG_NAME"

    - stage: deploy qa
      if: branch IN (qa) AND type != pull_request
      env:
        - AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID_QA
        - AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY_QA
        - AWS_DEFAULT_REGION=us-east-1
        - AWS_REGION=us-east-1
        - CLUSTER_NAME= # todo add cluster name
      install:
        - pip install --user awscli
      script:
        - aws ecs update-service --cluster $CLUSTER_NAME --service $CLUSTER_NAME --force-new-deployment

    - stage: deploy production
      if: branch IN (production) AND type != pull_request
      env:
        - AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY_PRODUCTION
        - AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID_PRODUCTION
        - AWS_DEFAULT_REGION=us-east-1
        - AWS_REGION=us-east-1
        - CLUSTER_NAME= # todo add cluster name
      install:
        - pip install --user awscli
      script:
        - aws ecs update-service --cluster $CLUSTER_NAME --service $CLUSTER_NAME --force-new-deployment

env:
  global:
    # AWS qa
    - secure: # todo add key
    # AWS prod
    - secure: # todo add key

after_success: echo "Deploying $TRAVIS_BRANCH"
