language: node_js
node_js:
- 16.19.0
services:
- docker
branches:
  only:
  - qa
  - production
jobs:
  include:
  - stage: docker build
    if: "(branch = qa or branch = production)"
    before_install:
    - if [[ $TRAVIS_BRANCH == "qa" ]]; then export AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID_DEVELOPMENT;
      export AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY_DEVELOPMENT; export ENV="qa";
      export ECR_URL=491147561046.dkr.ecr.us-east-1.amazonaws.com/nyplglobalheader;
      fi
    - if [[ "$TRAVIS_BRANCH" == "production" ]]; then export AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID_PRODUCTION;
      export AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY_PRODUCTION; export ENV="production";
      export ECR_URL=463786892988.dkr.ecr.us-east-1.amazonaws.com/nyplglobalheader;
      fi
    env:
    - AWS_DEFAULT_REGION=us-east-1
    - AWS_REGION=us-east-1
    install:
    - pip install --user awscli
    - export LOCAL_TAG_NAME="${ENV}-latest"
    script:
    - aws ecr get-login-password --region us-east-1 | docker login --password-stdin --username AWS $ECR_URL
    - DOCKER_BUILDKIT=1 docker build -t "$LOCAL_TAG_NAME" --secret id=AWS_ACCESS_KEY_ID
      --secret id=AWS_SECRET_ACCESS_KEY .
    - docker tag "$LOCAL_TAG_NAME" "$ECR_URL:$LOCAL_TAG_NAME"
    - docker push "$ECR_URL:$LOCAL_TAG_NAME"
  - stage: deploy qa
    if: branch IN (qa) AND type != pull_request
    env:
    - AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID_DEVELOPMENT
    - AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY_DEVELOPMENT
    - AWS_DEFAULT_REGION=us-east-1
    - AWS_REGION=us-east-1
    - CLUSTER_NAME=nyplorg-globalheader-qa
    install:
    - pip install --user awscli
    script:
    - aws ecs update-service --cluster $CLUSTER_NAME --service $CLUSTER_NAME --force-new-deployment
  - stage: deploy production
    if: branch IN (production) AND type != pull_request
    env:
    - AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY_PRODUCTION
    - AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID_PRODUCTION
    - AWS_DEFAULT_REGION=us-east-1
    - AWS_REGION=us-east-1
    - CLUSTER_NAME=nyplorg-globalheader-production
    install:
    - pip install --user awscli
    script:
    - aws ecs update-service --cluster $CLUSTER_NAME --service $CLUSTER_NAME --force-new-deployment
env:
  global:
    # AWS dev
    secure: oZUUxmPapDX9EIXL49JRAP1VapDsgU4Bict0nfEN2XyED3XzpEKr/R0qEB8dJwbmgKgyqVr42/Iib63OYLxiWnV7ZfEn+kbbT1HJ14Hp16+h92HzIwOH6ZCpWvVOGcmbnOu3+dwTlEKMMZDoDd/wdbaoAsfq54nVIiUiHIdE6q7zx7s1wQUhsL5WPDBKTOC6xp3lzskZ6n81FOUc+8rpEQCRLYZeshIW7ga59UAAXuJ19pyCpIIP1FLn2P5Reaealy1+uMVs09TYqJUpmJh9DGUITnJAgqhmPYwHpmQzyIYRu/OUP37xxHEq5+bCdyF/67zNGPDrTDfMIFDYtcMuV7JlAzTYo1iLRZ+2/swiD1uqlyyNlj8M7QElfITPNHl6aGBWzNZKyHIFKlWQ3bnLjsS/oziEiZNzfwEewe7CZpMxLq0nMe2HC6N+ZcXUwUUvTf68krcrYxPatq6wUAocKGYF3Xc2BikYYJpHPMZo73LBAH8qLSEUcateOicMxoeCjOTO3SwQCzuNd/KLMfo53SQWe11OpBssJldJp1jIJAqjbpqkjFu9nDbDIBpqmzAdJMBU1U6h1IMNg7raSFfAMM7D6sAKjVFSzgWQRQhS0y3r+70CyKMRBqW/RzajHDd/8sLaefdMx/zoOXmCBvFeqGhzff3JI0vGusFWbyXYdrY=
    # todo add secret: AWS prod
    # secure: 
after_success: echo "Deploying $TRAVIS_BRANCH"
