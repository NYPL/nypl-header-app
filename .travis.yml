language: node_js
node_js:
  - 18.20.0
services:
  - docker
branches:
  only:
    - qa
    - production
jobs:
  include:
    - stage: docker build
      if: "(branch = qa or branch = production)"
      before_install:
        - if [[ $TRAVIS_BRANCH == "qa" ]]; then export AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID_DEVELOPMENT;
          export AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY_DEVELOPMENT; export ENV="qa";
          export ECR_URL=491147561046.dkr.ecr.us-east-1.amazonaws.com/nyplglobalheader;
          export ECR_REPO=nyplglobalheader;
          fi
        - if [[ "$TRAVIS_BRANCH" == "production" ]]; then export AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID_PRODUCTION;
          export AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY_PRODUCTION; export ENV="production";
          export ECR_URL=463786892988.dkr.ecr.us-east-1.amazonaws.com/nyplglobalheader;
          fi
      env:
        - AWS_DEFAULT_REGION=us-east-1
        - AWS_REGION=us-east-1
      install:
        - pip install --user awscli
        - export LOCAL_TAG_NAME="${ENV}-latest"
      script:
        - aws ecr get-login-password --region us-east-1 | docker login --password-stdin --username AWS $ECR_URL
        - DOCKER_BUILDKIT=1 docker build -t "$LOCAL_TAG_NAME" --secret id=AWS_ACCESS_KEY_ID
          --secret id=AWS_SECRET_ACCESS_KEY .
        - MANIFEST=$(aws ecr batch-get-image --repository-name $ECR_REPO --image-ids imageTag="$ENV-latest" --output json | jq --raw-output --join-output '.images[0].imageManifest')
          aws ecr batch-delete-image --repository-name $ECR_REPO --image-ids imageTag="$ENV-previous" || true
          aws ecr put-image --repository-name $ECR_REPO --image-tag "$ENV-previous" --image-manifest "$MANIFEST"
        - docker tag "$LOCAL_TAG_NAME" "$ECR_URL:$LOCAL_TAG_NAME"
        - docker push "$ECR_URL:$LOCAL_TAG_NAME"
    - stage: deploy qa
      if: branch IN (qa) AND type != pull_request
      env:
        - AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID_DEVELOPMENT
        - AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY_DEVELOPMENT
        - AWS_DEFAULT_REGION=us-east-1
        - AWS_REGION=us-east-1
        - PREVIOUS_CLUSTER_NAME=nyplorg-globalheader-previous-qa
        - CLUSTER_NAME=nyplorg-globalheader-qa
      install:
        - pip install --user awscli
      script:
        - aws ecs update-service --cluster $PREVIOUS_CLUSTER_NAME --service $PREVIOUS_CLUSTER_NAME --force-new-deployment
        - aws ecs update-service --cluster $CLUSTER_NAME --service $CLUSTER_NAME --force-new-deployment
    - stage: deploy production
      if: branch IN (production) AND type != pull_request
      env:
        - AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY_PRODUCTION
        - AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID_PRODUCTION
        - AWS_DEFAULT_REGION=us-east-1
        - AWS_REGION=us-east-1
        - PREVIOUS_CLUSTER_NAME=nyplorg-globalheader-previous-production
        - CLUSTER_NAME=nyplorg-globalheader-production
      install:
        - pip install --user awscli
      script:
        - aws ecs update-service --cluster $PREVIOUS_CLUSTER_NAME --service $PREVIOUS_CLUSTER_NAME --force-new-deployment
        - aws ecs update-service --cluster $CLUSTER_NAME --service $CLUSTER_NAME --force-new-deployment
env:
  global:
    # AWS dev
    - secure: EFS424nqeIAUfieoR5k/O9pW42++D2HV5FItcPEXiB8V3/uloyJsvvW9kDxcwxgYskzn39Aa85LdQmB3n4e8EiNvIUCmgISbKEYYE2vkT3OfwfA3yuXWfE0tqo9Zo/pw26zhavv2vWJt4k+BP9is4naYpBFWONFnq1NgQq8E0TbFEVZOyWPRcm7o6JIoseJF2WpMHaXZh+UjHtlPbfWmWfGHcDcZn3GTXa+moYoykUgK7yCnKNq8Kwh8BFMkgHq1v+UPvX1jv/9paKbgEfBtxhtNTrVzsrk7YZynAA7y7Fr+dA8UTTcvtLk1YiUe84wIXeY8PSKAODO054DNJFPQhYhFUkcsVW4pmt0q4k4Tu+FEUELCcNr8BJpz+DoJMhbKc6MM7FjgIKxWy5fSx1BDpB3XIPexdsmRBVJ//ZeG4sGKfXxaztunbcPKcbT/B9Rkl69/Z/hO27dnQ5F35KKcMnJTOPnDsovqcI/N78afXXbJdrcWSrn2feokmMUVSVXtm4NA9enj0WBhdeWwalHsNviQZZUcevElACcPZHUMLoTm8YQgeicowW8XTaGLFLEftflOJEjgj0J7AXNBLLRgWV7P52v8/RICJMuTZLlOuhsLyfSY0krtAWNlgCf/RmRftywlkbh2mCNJbRBR97X+hp+FKCXXR863km5KFAsaxKA=
    # AWS prod
    - secure: GaXxPIGAaq4A8Z5xRy++ODyBjWe2J78yaiuc5MU48OQTxRGr6nG0QAGy/cGODCbX+zec8SSpR3p9P0tDFJuLPbOLYjhg7eIyxh1Rkxn7JGtoZB7LoxnWTXYAPPFwkI0kijKBNlZfO2kygEV6ry0tox6Z5ZwyZi+St3Lm3auKg1ZKZwmQZLagQ+U9f5FURS7sEwlLQCveu0LaUxkM8760lUTKPdISxL4MT2rNiT6iSdAkX8HjLpkFil/FsxWR3QQ9gc4rJ6hBPmt3Cjoa4kDzZsHudCCfqHoFG7ftGFQM9LPFdmnj/nWFvl2eX1otX0oOWzc/NTBnWopFQlZ7796krjCncMNrTy37iv+HkoJi5Fi1gSjvZ1rAM4wuzyYIxdw/mWSMNUCyJssN9dZl3cArlG9L2iVIlcr7koN4LlNphOV8ZjAzPtDkMsD0IoIfW9lLtcSsHmnBbvKR5bXdn1I/5+6n32FL+NIGihpc8DmY2HjlqraGtBg8Ajufdm8vE1oCvZfdPnJTovIUx6C67Kzi/tEYKZ625fuar7NqroGV8DgJ3E96RFKLoek45tmNtQM9MoihfiU4RpwUASTxch+P1TrYkyQRAFOOIeGi8nPD5LqN8Ykt+uiwsLR5RcVlz+Tq79AdjY1Dr+Sg2GFbr2b5WNMKLD04lh9KFYUTPLClABA=
after_success: echo "Deploying $TRAVIS_BRANCH"
